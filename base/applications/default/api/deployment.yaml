apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: default
  labels:
    app.kubernetes.io/component: microservice
    app.kubernetes.io/name: api
    app.kubernetes.io/managed-by: Jonathan
spec:
  revisionHistoryLimit: 3
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: microservice
      app.kubernetes.io/name: api
  template:
    metadata:
      labels:
        app.kubernetes.io/component: microservice
        app.kubernetes.io/name: api
      annotations:
        linkerd.io/inject: enabled
        # loki.io/scrape: "true"
    spec:
      containers:
        - name: api
          image: jojoooo1/api:2.0-d48f
          env:
            - name: "MANAGEMENT_SERVER_PORT"
              value: "8082"
            - name: "MANAGEMENT_ENDPOINT_HEALTH_GROUP_READINESS_INCLUDE"
              value: "rabbit"
            # - name: "MANAGEMENT_ENDPOINT_HEALTH_GROUP_LIVENESS_INCLUDE"
            #   value: "rabbit"
          envFrom:
            - secretRef:
                name: api-configs

          ports:
            - name: container-port
              containerPort: 8081
            - name: metrics
              containerPort: 8082

          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 10
            httpGet:
              path: /actuator/health/readiness
              port: metrics
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: metrics
            initialDelaySeconds: 15
            periodSeconds: 10

          lifecycle:
            preStop:
              httpGet:
                path: actuator/preStopHook/10000
                port: metrics

          resources:
            requests:
              memory: 768Mi
              cpu: 500m
            limits:
              memory: 768Mi

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp

          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000

      # Necessary for readOnly system
      volumes:
        - name: tmp-volume
          emptyDir: {}    